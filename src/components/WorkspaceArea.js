// src/components/WorkspaceArea.js (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
import React from "react";

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –≤–º–µ—Å—Ç–æ lazy loading –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
import ConnectionsLayer from "./ConnectionsLayer";
import ClassesLayer from "./ClassesLayer";
import SelectionOverlay from "./SelectionOverlay";

const WorkspaceArea = ({
	currentArchitecture,
	classes = [],
	connections = [],
	connectionPreview,
	selectedClass,
	selectedClasses = [],
	hasMultipleSelection,
	draggedClass,
	isConnecting,
	connectionStart, // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä
	handleClassClick,
	handleCanvasClick,
	handleCanvasMouseDown,
	isPanning,
	localCamera,
	canvasRef,
	classCategories,
	updateCurrentArchitecture,
	forceRender,
	deleteConnection,
	isClassSelected = () => false,
	selectionRect,
	isDrawingSelection,
	isSelectionMode,
	startSelection,
	updateSelection,
	endSelection,
}) => {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö
	if (!localCamera) {
		return (
			<div className="flex-1 flex items-center justify-center bg-gray-100">
				<div className="text-gray-500">–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–±–æ—á–µ–π –æ–±–ª–∞—Å—Ç–∏...</div>
			</div>
		);
	}

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∏ –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è
	const handleMouseMove = (e) => {
		if (isDrawingSelection) {
			updateSelection(e);
		}
	};

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –º—ã—à–∏
	const handleMouseUp = (e) => {
		if (isDrawingSelection) {
			endSelection();
		}
	};

	return (
		<div className="flex-1 relative overflow-hidden">
			<div
				ref={canvasRef}
				className={`w-full h-full bg-gray-100 relative overflow-hidden select-none ${isPanning ? "cursor-grabbing" : isSelectionMode ? "cursor-crosshair" : "cursor-grab"}`}
				style={{
					backgroundImage: "radial-gradient(circle, #ccc 1px, transparent 1px)",
					backgroundSize: `${20 * localCamera.zoom}px ${20 * localCamera.zoom}px`,
					backgroundPosition: `${localCamera.offsetX}px ${localCamera.offsetY}px`,
				}}
				onMouseDown={handleCanvasMouseDown}
				onMouseMove={handleMouseMove}
				onMouseUp={handleMouseUp}
				onClick={handleCanvasClick}
			>
				{/* –°–ª–æ–π —Å–≤—è–∑–µ–π */}
				<ConnectionsLayer connections={connections} connectionPreview={connectionPreview} classes={classes} localCamera={localCamera} deleteConnection={deleteConnection} />

				{/* –°–ª–æ–π –∫–ª–∞—Å—Å–æ–≤ */}
				<ClassesLayer
					classes={classes}
					localCamera={localCamera}
					isConnecting={isConnecting}
					connectionStart={connectionStart}
					selectedClass={selectedClass}
					handleClassClick={handleClassClick}
					currentArchitecture={currentArchitecture}
					forceRender={forceRender}
					selectedClasses={selectedClasses}
					isClassSelected={isClassSelected}
				/>

				{/* –°–ª–æ–π –≤—ã–¥–µ–ª–µ–Ω–∏—è –æ–±–ª–∞—Å—Ç–∏ */}
				<SelectionOverlay selectionRect={selectionRect} isDrawingSelection={isDrawingSelection} />

				{/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∑–¥–µ—Å—å */}
				{classes.length === 0 && (
					<div className="absolute inset-0 flex items-center justify-center pointer-events-none">
						<div className="text-center text-gray-500">
							<div className="text-4xl mb-4">üéÆ</div>
							<p className="text-lg mb-2">–ù–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –∏–≥—Ä—ã</p>
							<p className="text-sm">–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –∫–ª–∞—Å—Å—ã –≤—Ä—É—á–Ω—É—é</p>
						</div>
					</div>
				)}

				{/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–µ–∂–∏–º–∞ –≤—ã–¥–µ–ª–µ–Ω–∏—è - –ø–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –ª–µ–≤—ã–π –Ω–∏–∂–Ω–∏–π —É–≥–æ–ª */}
				{isSelectionMode && <div className="absolute bottom-4 left-4 z-50 bg-blue-500 text-white px-3 py-1 rounded text-sm">üéØ –†–µ–∂–∏–º –≤—ã–¥–µ–ª–µ–Ω–∏—è (Ctrl/Cmd)</div>}
			</div>
		</div>
	);
};

export default WorkspaceArea;
